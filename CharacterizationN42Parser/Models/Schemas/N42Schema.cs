namespace SPEAR.Models.Schemas.N42
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.42000
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------


    // 
    // This source code was auto-generated by xsd, Version=4.0.30319.33440.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AnalysisAlgorithmSetting", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class AnalysisAlgorithmSettingType : OptIdComplexObjectType
    {
        private string analysisAlgorithmSettingNameField;

        private string analysisAlgorithmSettingValueField;

        private string analysisAlgorithmSettingUnitsField;

        /// <remarks/>
        public string AnalysisAlgorithmSettingName {
            get {
                return this.analysisAlgorithmSettingNameField;
            }
            set {
                this.analysisAlgorithmSettingNameField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmSettingValue {
            get {
                return this.analysisAlgorithmSettingValueField;
            }
            set {
                this.analysisAlgorithmSettingValueField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmSettingUnits {
            get {
                return this.analysisAlgorithmSettingUnitsField;
            }
            set {
                this.analysisAlgorithmSettingUnitsField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadInstrumentDataType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultimediaDataType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExposureAnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DoseAnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GrossCountAnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpectrumPeakType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpectrumPeakAnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SourcePositionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuclideType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NuclideAnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadItemStateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadDetectorStateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FaultType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadInstrumentStateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadItemQuantityType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadInstrumentQualityControlType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadInstrumentVersionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacteristicGroupType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacteristicType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CharacteristicsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadAlarmType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalysisResultsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalysisAlgorithmVersionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AnalysisAlgorithmSettingType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    public partial class OptIdComplexObjectType
    {

        private string[] remarkField;

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Remark")]
        public string[] Remark
        {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "ID")]
        public string id
        {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadMeasurementType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadMeasurementGroupType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadItemInformationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadInstrumentInformationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadDetectorInformationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FWHMCalibrationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnergyWindowsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnergyCalibrationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EfficiencyCalibrationType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExposureRateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DoseRateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GrossCountsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpectrumType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DerivedDataType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    public partial class ReqIdComplexObjectType
    {
        private string[] remarkField;

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Remark")]
        public string[] Remark
        {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "ID")]
        public string id
        {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AnalysisAlgorithmVersion", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class AnalysisAlgorithmVersionType : OptIdComplexObjectType
    {

        private string analysisAlgorithmComponentNameField;

        private string analysisAlgorithmComponentVersionField;

        /// <remarks/>
        public string AnalysisAlgorithmComponentName
        {
            get {
                return this.analysisAlgorithmComponentNameField;
            }
            set {
                this.analysisAlgorithmComponentNameField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmComponentVersion
        {
            get {
                return this.analysisAlgorithmComponentVersionField;
            }
            set {
                this.analysisAlgorithmComponentVersionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class AnalysisResultsType : OptIdComplexObjectType
    {

        private System.DateTime analysisStartDateTimeField;

        private bool analysisStartDateTimeFieldSpecified;

        private string analysisComputationDurationField;

        private string analysisAlgorithmNameField;

        private string analysisAlgorithmCreatorNameField;

        private string analysisAlgorithmDescriptionField;

        private AnalysisAlgorithmVersionType[] analysisAlgorithmVersionField;

        private AnalysisAlgorithmSettingType[] analysisAlgorithmSettingField;

        private AnalysisResultStatusCodeSimpleType analysisResultStatusCodeField;

        private bool analysisResultStatusCodeFieldSpecified;

        private string analysisConfidenceValueField;

        private bool analysisConfidenceValueFieldSpecified;

        private string analysisResultDescriptionField;

        private RadAlarmType[] radAlarmField;

        private NuclideAnalysisResultsType nuclideAnalysisResultsField;

        private SpectrumPeakAnalysisResultsType spectrumPeakAnalysisResultsField;

        private GrossCountAnalysisResultsType grossCountAnalysisResultsField;

        private DoseAnalysisResultsType doseAnalysisResultsField;

        private ExposureAnalysisResultsType exposureAnalysisResultsField;

        private FaultType[] faultField;

        private object[] analysisResultsExtensionField;

        private string radMeasurementGroupReferencesField;

        private string derivedDataReferencesField;

        private string radMeasurementReferencesField;

        /// <remarks/>
        public System.DateTime AnalysisStartDateTime
        {
            get {
                return this.analysisStartDateTimeField;
            }
            set {
                this.analysisStartDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisStartDateTimeSpecified
        {
            get {
                return this.analysisStartDateTimeFieldSpecified;
            }
            set {
                this.analysisStartDateTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string AnalysisComputationDuration
        {
            get {
                return this.analysisComputationDurationField;
            }
            set {
                this.analysisComputationDurationField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmName
        {
            get {
                return this.analysisAlgorithmNameField;
            }
            set {
                this.analysisAlgorithmNameField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmCreatorName
        {
            get {
                return this.analysisAlgorithmCreatorNameField;
            }
            set {
                this.analysisAlgorithmCreatorNameField = value;
            }
        }

        /// <remarks/>
        public string AnalysisAlgorithmDescription
        {
            get {
                return this.analysisAlgorithmDescriptionField;
            }
            set {
                this.analysisAlgorithmDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnalysisAlgorithmVersion")]
        public AnalysisAlgorithmVersionType[] AnalysisAlgorithmVersion
        {
            get {
                return this.analysisAlgorithmVersionField;
            }
            set {
                this.analysisAlgorithmVersionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnalysisAlgorithmSetting")]
        public AnalysisAlgorithmSettingType[] AnalysisAlgorithmSetting
        {
            get {
                return this.analysisAlgorithmSettingField;
            }
            set {
                this.analysisAlgorithmSettingField = value;
            }
        }

        /// <remarks/>
        public AnalysisResultStatusCodeSimpleType AnalysisResultStatusCode
        {
            get {
                return this.analysisResultStatusCodeField;
            }
            set {
                this.analysisResultStatusCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisResultStatusCodeSpecified
        {
            get {
                return this.analysisResultStatusCodeFieldSpecified;
            }
            set {
                this.analysisResultStatusCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string AnalysisConfidenceValue
        {
            get {
                return this.analysisConfidenceValueField;
            }
            set {
                this.analysisConfidenceValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AnalysisConfidenceValueSpecified
        {
            get {
                return this.analysisConfidenceValueFieldSpecified;
            }
            set {
                this.analysisConfidenceValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string AnalysisResultDescription
        {
            get {
                return this.analysisResultDescriptionField;
            }
            set {
                this.analysisResultDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadAlarm")]
        public RadAlarmType[] RadAlarm
        {
            get {
                return this.radAlarmField;
            }
            set {
                this.radAlarmField = value;
            }
        }

        /// <remarks/>
        public NuclideAnalysisResultsType NuclideAnalysisResults
        {
            get {
                return this.nuclideAnalysisResultsField;
            }
            set {
                this.nuclideAnalysisResultsField = value;
            }
        }

        /// <remarks/>
        public SpectrumPeakAnalysisResultsType SpectrumPeakAnalysisResults
        {
            get {
                return this.spectrumPeakAnalysisResultsField;
            }
            set {
                this.spectrumPeakAnalysisResultsField = value;
            }
        }

        /// <remarks/>
        public GrossCountAnalysisResultsType GrossCountAnalysisResults
        {
            get {
                return this.grossCountAnalysisResultsField;
            }
            set {
                this.grossCountAnalysisResultsField = value;
            }
        }

        /// <remarks/>
        public DoseAnalysisResultsType DoseAnalysisResults
        {
            get {
                return this.doseAnalysisResultsField;
            }
            set {
                this.doseAnalysisResultsField = value;
            }
        }

        /// <remarks/>
        public ExposureAnalysisResultsType ExposureAnalysisResults
        {
            get {
                return this.exposureAnalysisResultsField;
            }
            set {
                this.exposureAnalysisResultsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fault")]
        public FaultType[] Fault
        {
            get {
                return this.faultField;
            }
            set {
                this.faultField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnalysisResultsExtension")]
        public object[] AnalysisResultsExtension
        {
            get {
                return this.analysisResultsExtensionField;
            }
            set {
                this.analysisResultsExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radMeasurementGroupReferences
        {
            get {
                return this.radMeasurementGroupReferencesField;
            }
            set {
                this.radMeasurementGroupReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string derivedDataReferences
        {
            get {
                return this.derivedDataReferencesField;
            }
            set {
                this.derivedDataReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radMeasurementReferences
        {
            get {
                return this.radMeasurementReferencesField;
            }
            set {
                this.radMeasurementReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AnalysisResultStatusCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum AnalysisResultStatusCodeSimpleType
    {

        /// <remarks/>
        Success,

        /// <remarks/>
        Failure,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadAlarm", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadAlarmType : OptIdComplexObjectType
    {

        private System.DateTime radAlarmDateTimeField;

        private bool radAlarmDateTimeFieldSpecified;

        private RadAlarmCategoryCodeSimpleType radAlarmCategoryCodeField;

        private string radAlarmDescriptionField;

        private bool alarmAudibleIndicatorField;

        private bool alarmAudibleIndicatorFieldSpecified;

        private string radAlarmLightColorField;

        private string radAlarmEnergyWindowIndicesField;

        private object[] radAlarmExtensionField;

        private string radDetectorInformationReferencesField;

        /// <remarks/>
        public System.DateTime RadAlarmDateTime
        {
            get {
                return this.radAlarmDateTimeField;
            }
            set {
                this.radAlarmDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadAlarmDateTimeSpecified
        {
            get {
                return this.radAlarmDateTimeFieldSpecified;
            }
            set {
                this.radAlarmDateTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public RadAlarmCategoryCodeSimpleType RadAlarmCategoryCode
        {
            get {
                return this.radAlarmCategoryCodeField;
            }
            set {
                this.radAlarmCategoryCodeField = value;
            }
        }

        /// <remarks/>
        public string RadAlarmDescription
        {
            get {
                return this.radAlarmDescriptionField;
            }
            set {
                this.radAlarmDescriptionField = value;
            }
        }

        /// <remarks/>
        public bool AlarmAudibleIndicator
        {
            get {
                return this.alarmAudibleIndicatorField;
            }
            set {
                this.alarmAudibleIndicatorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlarmAudibleIndicatorSpecified
        {
            get {
                return this.alarmAudibleIndicatorFieldSpecified;
            }
            set {
                this.alarmAudibleIndicatorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "token")]
        public string RadAlarmLightColor
        {
            get {
                return this.radAlarmLightColorField;
            }
            set {
                this.radAlarmLightColorField = value;
            }
        }

        /// <remarks/>
        public string RadAlarmEnergyWindowIndices
        {
            get {
                return this.radAlarmEnergyWindowIndicesField;
            }
            set {
                this.radAlarmEnergyWindowIndicesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadAlarmExtension")]
        public object[] RadAlarmExtension
        {
            get {
                return this.radAlarmExtensionField;
            }
            set {
                this.radAlarmExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radDetectorInformationReferences
        {
            get {
                return this.radDetectorInformationReferencesField;
            }
            set {
                this.radDetectorInformationReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadAlarmCategoryCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum RadAlarmCategoryCodeSimpleType
    {

        /// <remarks/>
        Neutron,

        /// <remarks/>
        Gamma,

        /// <remarks/>
        Alpha,

        /// <remarks/>
        Beta,

        /// <remarks/>
        Isotope,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideAnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class NuclideAnalysisResultsType : OptIdComplexObjectType
    {

        private NuclideType[] nuclideField;

        private string nuclideAnalysisReducedChiSquareValueField;

        private bool nuclideAnalysisReducedChiSquareValueFieldSpecified;

        private object[] nuclideAnalysisResultsExtensionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Nuclide")]
        public NuclideType[] Nuclide
        {
            get {
                return this.nuclideField;
            }
            set {
                this.nuclideField = value;
            }
        }

        /// <remarks/>
        public string NuclideAnalysisReducedChiSquareValue
        {
            get {
                return this.nuclideAnalysisReducedChiSquareValueField;
            }
            set {
                this.nuclideAnalysisReducedChiSquareValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NuclideAnalysisReducedChiSquareValueSpecified
        {
            get {
                return this.nuclideAnalysisReducedChiSquareValueFieldSpecified;
            }
            set {
                this.nuclideAnalysisReducedChiSquareValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NuclideAnalysisResultsExtension")]
        public object[] NuclideAnalysisResultsExtension
        {
            get {
                return this.nuclideAnalysisResultsExtensionField;
            }
            set {
                this.nuclideAnalysisResultsExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Nuclide", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class NuclideType : OptIdComplexObjectType
    {

        private bool nuclideIdentifiedIndicatorField;

        private string nuclideNameField;

        private NuclideActivityType nuclideActivityValueField;

        private NuclideActivityUncertaintyType nuclideActivityUncertaintyValueField;

        private NuclideMDAType nuclideMinimumDetectableActivityValueField;

        private object[] itemsField;

        private ItemsChoiceType[] itemsElementNameField;

        private string nuclideCategoryDescriptionField;

        private SourceGeometryCodeSimpleType nuclideSourceGeometryCodeField;

        private bool nuclideSourceGeometryCodeFieldSpecified;

        private SourcePositionType sourcePositionField;

        private string nuclideShieldingAtomicNumberField;

        private bool nuclideShieldingAtomicNumberFieldSpecified;

        private ArealDensityType nuclideShieldingArealDensityValueField;

        private object nuclideExtensionField;

        /// <remarks/>
        public bool NuclideIdentifiedIndicator
        {
            get {
                return this.nuclideIdentifiedIndicatorField;
            }
            set {
                this.nuclideIdentifiedIndicatorField = value;
            }
        }

        /// <remarks/>
        public string NuclideName
        {
            get {
                return this.nuclideNameField;
            }
            set {
                this.nuclideNameField = value;
            }
        }

        /// <remarks/>
        public NuclideActivityType NuclideActivityValue
        {
            get {
                return this.nuclideActivityValueField;
            }
            set {
                this.nuclideActivityValueField = value;
            }
        }

        /// <remarks/>
        public NuclideActivityUncertaintyType NuclideActivityUncertaintyValue
        {
            get {
                return this.nuclideActivityUncertaintyValueField;
            }
            set {
                this.nuclideActivityUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public NuclideMDAType NuclideMinimumDetectableActivityValue
        {
            get {
                return this.nuclideMinimumDetectableActivityValueField;
            }
            set {
                this.nuclideMinimumDetectableActivityValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NuclideIDConfidenceDescription", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("NuclideIDConfidenceUncertaintyValue", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("NuclideIDConfidenceValue", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName
        {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }

        /// <remarks/>
        public string NuclideCategoryDescription
        {
            get {
                return this.nuclideCategoryDescriptionField;
            }
            set {
                this.nuclideCategoryDescriptionField = value;
            }
        }

        /// <remarks/>
        public SourceGeometryCodeSimpleType NuclideSourceGeometryCode
        {
            get {
                return this.nuclideSourceGeometryCodeField;
            }
            set {
                this.nuclideSourceGeometryCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NuclideSourceGeometryCodeSpecified
        {
            get {
                return this.nuclideSourceGeometryCodeFieldSpecified;
            }
            set {
                this.nuclideSourceGeometryCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public SourcePositionType SourcePosition
        {
            get {
                return this.sourcePositionField;
            }
            set {
                this.sourcePositionField = value;
            }
        }

        /// <remarks/>
        public string NuclideShieldingAtomicNumber
        {
            get {
                return this.nuclideShieldingAtomicNumberField;
            }
            set {
                this.nuclideShieldingAtomicNumberField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NuclideShieldingAtomicNumberSpecified
        {
            get {
                return this.nuclideShieldingAtomicNumberFieldSpecified;
            }
            set {
                this.nuclideShieldingAtomicNumberFieldSpecified = value;
            }
        }

        /// <remarks/>
        public ArealDensityType NuclideShieldingArealDensityValue
        {
            get {
                return this.nuclideShieldingArealDensityValueField;
            }
            set {
                this.nuclideShieldingArealDensityValueField = value;
            }
        }

        /// <remarks/>
        public object NuclideExtension
        {
            get {
                return this.nuclideExtensionField;
            }
            set {
                this.nuclideExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideActivityValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class NuclideActivityType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideActivityUncertaintyValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class NuclideActivityUncertaintyType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideMinimumDetectableActivityValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class NuclideMDAType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42", IncludeInSchema = false)]
    public enum ItemsChoiceType
    {

        /// <remarks/>
        NuclideIDConfidenceDescription,

        /// <remarks/>
        NuclideIDConfidenceUncertaintyValue,

        /// <remarks/>
        NuclideIDConfidenceValue,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideSourceGeometryCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum SourceGeometryCodeSimpleType
    {

        /// <remarks/>
        Point,

        /// <remarks/>
        Extended,

        /// <remarks/>
        Undetermined,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("SourcePosition", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SourcePositionType : OptIdComplexObjectType
    {

        private object itemField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeographicPoint", typeof(GeographicPointType))]
        [System.Xml.Serialization.XmlElementAttribute("LocationDescription", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("RelativeLocation", typeof(RelativeLocationType))]
        public object Item
        {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("GeographicPoint", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class GeographicPointType
    {

        private Angle90Type latitudeValueField;

        private Angle180Type longitudeValueField;

        private decimal elevationValueField;

        private bool elevationValueFieldSpecified;

        private decimal elevationOffsetValueField;

        private bool elevationOffsetValueFieldSpecified;

        private decimal geoPointAccuracyValueField;

        private bool geoPointAccuracyValueFieldSpecified;

        private decimal elevationAccuracyValueField;

        private bool elevationAccuracyValueFieldSpecified;

        private decimal elevationOffsetAccuracyValueField;

        private bool elevationOffsetAccuracyValueFieldSpecified;

        private string datumField;

        private string unitsField;

        /// <remarks/>
        public Angle90Type LatitudeValue
        {
            get {
                return this.latitudeValueField;
            }
            set {
                this.latitudeValueField = value;
            }
        }

        /// <remarks/>
        public Angle180Type LongitudeValue
        {
            get {
                return this.longitudeValueField;
            }
            set {
                this.longitudeValueField = value;
            }
        }

        /// <remarks/>
        public decimal ElevationValue
        {
            get {
                return this.elevationValueField;
            }
            set {
                this.elevationValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationValueSpecified
        {
            get {
                return this.elevationValueFieldSpecified;
            }
            set {
                this.elevationValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal ElevationOffsetValue
        {
            get {
                return this.elevationOffsetValueField;
            }
            set {
                this.elevationOffsetValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationOffsetValueSpecified
        {
            get {
                return this.elevationOffsetValueFieldSpecified;
            }
            set {
                this.elevationOffsetValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal GeoPointAccuracyValue
        {
            get {
                return this.geoPointAccuracyValueField;
            }
            set {
                this.geoPointAccuracyValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoPointAccuracyValueSpecified
        {
            get {
                return this.geoPointAccuracyValueFieldSpecified;
            }
            set {
                this.geoPointAccuracyValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal ElevationAccuracyValue
        {
            get {
                return this.elevationAccuracyValueField;
            }
            set {
                this.elevationAccuracyValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationAccuracyValueSpecified
        {
            get {
                return this.elevationAccuracyValueFieldSpecified;
            }
            set {
                this.elevationAccuracyValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public decimal ElevationOffsetAccuracyValue
        {
            get {
                return this.elevationOffsetAccuracyValueField;
            }
            set {
                this.elevationOffsetAccuracyValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ElevationOffsetAccuracyValueSpecified
        {
            get {
                return this.elevationOffsetAccuracyValueFieldSpecified;
            }
            set {
                this.elevationOffsetAccuracyValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string datum
        {
            get {
                return this.datumField;
            }
            set {
                this.datumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("LatitudeValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class Angle90Type
    {

        private string unitsField;

        private decimal valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public decimal Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("LongitudeValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class Angle180Type
    {

        private string unitsField;

        private decimal valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public decimal Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RelativeLocation", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RelativeLocationType
    {

        private Angle180Type relativeLocationAzimuthValueField;

        private Angle90Type relativeLocationInclinationValueField;

        private DistanceType distanceValueField;

        private OriginType originField;

        /// <remarks/>
        public Angle180Type RelativeLocationAzimuthValue
        {
            get {
                return this.relativeLocationAzimuthValueField;
            }
            set {
                this.relativeLocationAzimuthValueField = value;
            }
        }

        /// <remarks/>
        public Angle90Type RelativeLocationInclinationValue
        {
            get {
                return this.relativeLocationInclinationValueField;
            }
            set {
                this.relativeLocationInclinationValueField = value;
            }
        }

        /// <remarks/>
        public DistanceType DistanceValue
        {
            get {
                return this.distanceValueField;
            }
            set {
                this.distanceValueField = value;
            }
        }

        /// <remarks/>
        public OriginType Origin
        {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("DistanceValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class DistanceType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Origin", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class OriginType
    {

        private GeographicPointType geographicPointField;

        private string originDescriptionField;

        private string originReferenceField;

        /// <remarks/>
        public GeographicPointType GeographicPoint
        {
            get {
                return this.geographicPointField;
            }
            set {
                this.geographicPointField = value;
            }
        }

        /// <remarks/>
        public string OriginDescription
        {
            get {
                return this.originDescriptionField;
            }
            set {
                this.originDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string originReference
        {
            get {
                return this.originReferenceField;
            }
            set {
                this.originReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("NuclideShieldingArealDensityValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class ArealDensityType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("SpectrumPeakAnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SpectrumPeakAnalysisResultsType : OptIdComplexObjectType
    {

        private SpectrumPeakType[] spectrumPeakField;

        private object[] spectrumPeakAnalysisResultsExtensionField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SpectrumPeak")]
        public SpectrumPeakType[] SpectrumPeak
        {
            get {
                return this.spectrumPeakField;
            }
            set {
                this.spectrumPeakField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SpectrumPeakAnalysisResultsExtension")]
        public object[] SpectrumPeakAnalysisResultsExtension
        {
            get {
                return this.spectrumPeakAnalysisResultsExtensionField;
            }
            set {
                this.spectrumPeakAnalysisResultsExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("SpectrumPeak", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SpectrumPeakType : OptIdComplexObjectType
    {

        private SpectrumPeakEnergyKeVType spectrumPeakEnergyValueField;

        private SpectrumPeakEnergyKeVType spectrumPeakExpectedEnergyValueField;

        private SpectrumPeakEnergyKeVType spectrumPeakFWHMValueField;

        private string spectrumPeakNetAreaValueField;

        private bool spectrumPeakNetAreaValueFieldSpecified;

        private string spectrumPeakNetAreaUncertaintyValueField;

        private bool spectrumPeakNetAreaUncertaintyValueFieldSpecified;

        private object spectrumPeakExtensionField;

        /// <remarks/>
        public SpectrumPeakEnergyKeVType SpectrumPeakEnergyValue
        {
            get {
                return this.spectrumPeakEnergyValueField;
            }
            set {
                this.spectrumPeakEnergyValueField = value;
            }
        }

        /// <remarks/>
        public SpectrumPeakEnergyKeVType SpectrumPeakExpectedEnergyValue
        {
            get {
                return this.spectrumPeakExpectedEnergyValueField;
            }
            set {
                this.spectrumPeakExpectedEnergyValueField = value;
            }
        }

        /// <remarks/>
        public SpectrumPeakEnergyKeVType SpectrumPeakFWHMValue
        {
            get {
                return this.spectrumPeakFWHMValueField;
            }
            set {
                this.spectrumPeakFWHMValueField = value;
            }
        }

        /// <remarks/>
        public string SpectrumPeakNetAreaValue
        {
            get {
                return this.spectrumPeakNetAreaValueField;
            }
            set {
                this.spectrumPeakNetAreaValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpectrumPeakNetAreaValueSpecified
        {
            get {
                return this.spectrumPeakNetAreaValueFieldSpecified;
            }
            set {
                this.spectrumPeakNetAreaValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string SpectrumPeakNetAreaUncertaintyValue
        {
            get {
                return this.spectrumPeakNetAreaUncertaintyValueField;
            }
            set {
                this.spectrumPeakNetAreaUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SpectrumPeakNetAreaUncertaintyValueSpecified
        {
            get {
                return this.spectrumPeakNetAreaUncertaintyValueFieldSpecified;
            }
            set {
                this.spectrumPeakNetAreaUncertaintyValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public object SpectrumPeakExtension
        {
            get {
                return this.spectrumPeakExtensionField;
            }
            set {
                this.spectrumPeakExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("SpectrumPeakEnergyValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SpectrumPeakEnergyKeVType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("GrossCountAnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class GrossCountAnalysisResultsType : OptIdComplexObjectType
    {

        private CountRateCPSType averageCountRateValueField;

        private CountRateCPSType averageCountRateUncertaintyValueField;

        private CountRateCPSType maximumCountRateValueField;

        private CountRateCPSType minimumCountRateValueField;

        private string totalCountsValueField;

        private bool totalCountsValueFieldSpecified;

        private CountRateCPSType backgroundCountRateValueField;

        private CountRateCPSType backgroundCountRateUncertaintyValueField;

        private SourcePositionType sourcePositionField;

        private object[] grossCountAnalysisResultsExtensionField;

        /// <remarks/>
        public CountRateCPSType AverageCountRateValue
        {
            get {
                return this.averageCountRateValueField;
            }
            set {
                this.averageCountRateValueField = value;
            }
        }

        /// <remarks/>
        public CountRateCPSType AverageCountRateUncertaintyValue
        {
            get {
                return this.averageCountRateUncertaintyValueField;
            }
            set {
                this.averageCountRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public CountRateCPSType MaximumCountRateValue
        {
            get {
                return this.maximumCountRateValueField;
            }
            set {
                this.maximumCountRateValueField = value;
            }
        }

        /// <remarks/>
        public CountRateCPSType MinimumCountRateValue
        {
            get {
                return this.minimumCountRateValueField;
            }
            set {
                this.minimumCountRateValueField = value;
            }
        }

        /// <remarks/>
        public string TotalCountsValue
        {
            get {
                return this.totalCountsValueField;
            }
            set {
                this.totalCountsValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalCountsValueSpecified
        {
            get {
                return this.totalCountsValueFieldSpecified;
            }
            set {
                this.totalCountsValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public CountRateCPSType BackgroundCountRateValue
        {
            get {
                return this.backgroundCountRateValueField;
            }
            set {
                this.backgroundCountRateValueField = value;
            }
        }

        /// <remarks/>
        public CountRateCPSType BackgroundCountRateUncertaintyValue
        {
            get {
                return this.backgroundCountRateUncertaintyValueField;
            }
            set {
                this.backgroundCountRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public SourcePositionType SourcePosition
        {
            get {
                return this.sourcePositionField;
            }
            set {
                this.sourcePositionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GrossCountAnalysisResultsExtension")]
        public object[] GrossCountAnalysisResultsExtension
        {
            get {
                return this.grossCountAnalysisResultsExtensionField;
            }
            set {
                this.grossCountAnalysisResultsExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AverageCountRateUncertaintyValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class CountRateCPSType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("DoseAnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class DoseAnalysisResultsType : OptIdComplexObjectType
    {

        private DoseRateuSvhType averageDoseRateValueField;

        private DoseRateuSvhType averageDoseRateUncertaintyValueField;

        private DoseRateuSvhType maximumDoseRateValueField;

        private DoseRateuSvhType minimumDoseRateValueField;

        private DoseRateuSvhType backgroundDoseRateValueField;

        private DoseRateuSvhType backgroundDoseRateUncertaintyValueField;

        private TotalDoseuSvType totalDoseValueField;

        private SourcePositionType sourcePositionField;

        private object[] doseAnalysisResultsExtensionField;

        /// <remarks/>
        public DoseRateuSvhType AverageDoseRateValue
        {
            get {
                return this.averageDoseRateValueField;
            }
            set {
                this.averageDoseRateValueField = value;
            }
        }

        /// <remarks/>
        public DoseRateuSvhType AverageDoseRateUncertaintyValue
        {
            get {
                return this.averageDoseRateUncertaintyValueField;
            }
            set {
                this.averageDoseRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public DoseRateuSvhType MaximumDoseRateValue
        {
            get {
                return this.maximumDoseRateValueField;
            }
            set {
                this.maximumDoseRateValueField = value;
            }
        }

        /// <remarks/>
        public DoseRateuSvhType MinimumDoseRateValue
        {
            get {
                return this.minimumDoseRateValueField;
            }
            set {
                this.minimumDoseRateValueField = value;
            }
        }

        /// <remarks/>
        public DoseRateuSvhType BackgroundDoseRateValue
        {
            get {
                return this.backgroundDoseRateValueField;
            }
            set {
                this.backgroundDoseRateValueField = value;
            }
        }

        /// <remarks/>
        public DoseRateuSvhType BackgroundDoseRateUncertaintyValue
        {
            get {
                return this.backgroundDoseRateUncertaintyValueField;
            }
            set {
                this.backgroundDoseRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public TotalDoseuSvType TotalDoseValue
        {
            get {
                return this.totalDoseValueField;
            }
            set {
                this.totalDoseValueField = value;
            }
        }

        /// <remarks/>
        public SourcePositionType SourcePosition
        {
            get {
                return this.sourcePositionField;
            }
            set {
                this.sourcePositionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DoseAnalysisResultsExtension")]
        public object[] DoseAnalysisResultsExtension
        {
            get {
                return this.doseAnalysisResultsExtensionField;
            }
            set {
                this.doseAnalysisResultsExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AverageDoseRateUncertaintyValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class DoseRateuSvhType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TotalDoseType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("TotalDoseValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class TotalDoseuSvType
    {

        private string unitsField;

        private string idField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "ID")]
        public string id
        {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("ExposureAnalysisResults", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class ExposureAnalysisResultsType : OptIdComplexObjectType
    {

        private ExposureRatemRhType averageExposureRateValueField;

        private ExposureRatemRhType averageExposureRateUncertaintyValueField;

        private ExposureRatemRhType maximumExposureRateValueField;

        private ExposureRatemRhType minimumExposureRateValueField;

        private ExposureRatemRhType backgroundExposureRateValueField;

        private ExposureRatemRhType backgroundExposureRateUncertaintyValueField;

        private TotalExposuremRType totalExposureValueField;

        private SourcePositionType sourcePositionField;

        private object[] exposureAnalysisResultsExtensionField;

        /// <remarks/>
        public ExposureRatemRhType AverageExposureRateValue
        {
            get {
                return this.averageExposureRateValueField;
            }
            set {
                this.averageExposureRateValueField = value;
            }
        }

        /// <remarks/>
        public ExposureRatemRhType AverageExposureRateUncertaintyValue
        {
            get {
                return this.averageExposureRateUncertaintyValueField;
            }
            set {
                this.averageExposureRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public ExposureRatemRhType MaximumExposureRateValue
        {
            get {
                return this.maximumExposureRateValueField;
            }
            set {
                this.maximumExposureRateValueField = value;
            }
        }

        /// <remarks/>
        public ExposureRatemRhType MinimumExposureRateValue
        {
            get {
                return this.minimumExposureRateValueField;
            }
            set {
                this.minimumExposureRateValueField = value;
            }
        }

        /// <remarks/>
        public ExposureRatemRhType BackgroundExposureRateValue
        {
            get {
                return this.backgroundExposureRateValueField;
            }
            set {
                this.backgroundExposureRateValueField = value;
            }
        }

        /// <remarks/>
        public ExposureRatemRhType BackgroundExposureRateUncertaintyValue
        {
            get {
                return this.backgroundExposureRateUncertaintyValueField;
            }
            set {
                this.backgroundExposureRateUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        public TotalExposuremRType TotalExposureValue
        {
            get {
                return this.totalExposureValueField;
            }
            set {
                this.totalExposureValueField = value;
            }
        }

        /// <remarks/>
        public SourcePositionType SourcePosition
        {
            get {
                return this.sourcePositionField;
            }
            set {
                this.sourcePositionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExposureAnalysisResultsExtension")]
        public object[] ExposureAnalysisResultsExtension
        {
            get {
                return this.exposureAnalysisResultsExtensionField;
            }
            set {
                this.exposureAnalysisResultsExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("AverageExposureRateUncertaintyValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class ExposureRatemRhType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TotalExposureType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("TotalExposureValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class TotalExposuremRType
    {

        private string unitsField;

        private string idField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "ID")]
        public string id
        {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Fault", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class FaultType : OptIdComplexObjectType
    {

        private string faultCodeValueField;

        private string faultDescriptionField;

        private FaultSeverityCodeSimpleType faultSeverityCodeField;

        private object[] faultExtensionField;

        /// <remarks/>
        public string FaultCodeValue
        {
            get {
                return this.faultCodeValueField;
            }
            set {
                this.faultCodeValueField = value;
            }
        }

        /// <remarks/>
        public string FaultDescription
        {
            get {
                return this.faultDescriptionField;
            }
            set {
                this.faultDescriptionField = value;
            }
        }

        /// <remarks/>
        public FaultSeverityCodeSimpleType FaultSeverityCode
        {
            get {
                return this.faultSeverityCodeField;
            }
            set {
                this.faultSeverityCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FaultExtension")]
        public object[] FaultExtension
        {
            get {
                return this.faultExtensionField;
            }
            set {
                this.faultExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("FaultSeverityCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum FaultSeverityCodeSimpleType
    {

        /// <remarks/>
        Fatal,

        /// <remarks/>
        Error,

        /// <remarks/>
        Warning,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("ChannelData", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class ChannelDataType
    {

        private CompressionCodeSimpleType compressionCodeField;

        private bool compressionCodeFieldSpecified;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompressionCodeSimpleType compressionCode
        {
            get {
                return this.compressionCodeField;
            }
            set {
                this.compressionCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool compressionCodeSpecified
        {
            get {
                return this.compressionCodeFieldSpecified;
            }
            set {
                this.compressionCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Text
        {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    public enum CompressionCodeSimpleType
    {

        /// <remarks/>
        None,

        /// <remarks/>
        CountedZeroes,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Characteristic", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class CharacteristicType : OptIdComplexObjectType
    {

        private string characteristicNameField;

        private string characteristicValueField;

        private string characteristicValueUnitsField;

        private ValueDataClassCodeSimpleType characteristicValueDataClassCodeField;

        private System.DateTime valueDateTimeField;

        private bool valueDateTimeFieldSpecified;

        private bool valueOutOfLimitsField;

        private bool valueOutOfLimitsFieldSpecified;

        /// <remarks/>
        public string CharacteristicName
        {
            get {
                return this.characteristicNameField;
            }
            set {
                this.characteristicNameField = value;
            }
        }

        /// <remarks/>
        public string CharacteristicValue
        {
            get {
                return this.characteristicValueField;
            }
            set {
                this.characteristicValueField = value;
            }
        }

        /// <remarks/>
        public string CharacteristicValueUnits
        {
            get {
                return this.characteristicValueUnitsField;
            }
            set {
                this.characteristicValueUnitsField = value;
            }
        }

        /// <remarks/>
        public ValueDataClassCodeSimpleType CharacteristicValueDataClassCode
        {
            get {
                return this.characteristicValueDataClassCodeField;
            }
            set {
                this.characteristicValueDataClassCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime valueDateTime
        {
            get {
                return this.valueDateTimeField;
            }
            set {
                this.valueDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueDateTimeSpecified
        {
            get {
                return this.valueDateTimeFieldSpecified;
            }
            set {
                this.valueDateTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool valueOutOfLimits
        {
            get {
                return this.valueOutOfLimitsField;
            }
            set {
                this.valueOutOfLimitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueOutOfLimitsSpecified
        {
            get {
                return this.valueOutOfLimitsFieldSpecified;
            }
            set {
                this.valueOutOfLimitsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("CharacteristicValueDataClassCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum ValueDataClassCodeSimpleType
    {

        /// <remarks/>
        anyURI,

        /// <remarks/>
        base64Binary,

        /// <remarks/>
        boolean,

        /// <remarks/>
        @byte,

        /// <remarks/>
        date,

        /// <remarks/>
        dateTime,

        /// <remarks/>
        @decimal,

        /// <remarks/>
        @double,

        /// <remarks/>
        DoubleList,

        /// <remarks/>
        duration,

        /// <remarks/>
        @float,

        /// <remarks/>
        hexBinary,

        /// <remarks/>
        ID,

        /// <remarks/>
        IDREF,

        /// <remarks/>
        IDREFS,

        /// <remarks/>
        @int,

        /// <remarks/>
        integer,

        /// <remarks/>
        @long,

        /// <remarks/>
        Name,

        /// <remarks/>
        NCName,

        /// <remarks/>
        negativeInteger,

        /// <remarks/>
        NonBlankString,

        /// <remarks/>
        NonNegativeDoubleList,

        /// <remarks/>
        NonNegativeDouble,

        /// <remarks/>
        nonNegativeInteger,

        /// <remarks/>
        nonPositiveInteger,

        /// <remarks/>
        normalizedString,

        /// <remarks/>
        Percent,

        /// <remarks/>
        PositiveDoubleList,

        /// <remarks/>
        PositiveDouble,

        /// <remarks/>
        positiveInteger,

        /// <remarks/>
        PositiveIntegerList,

        /// <remarks/>
        @short,

        /// <remarks/>
        @string,

        /// <remarks/>
        StringList,

        /// <remarks/>
        time,

        /// <remarks/>
        token,

        /// <remarks/>
        unsignedByte,

        /// <remarks/>
        unsignedInt,

        /// <remarks/>
        unsignedLong,

        /// <remarks/>
        unsignedShort,

        /// <remarks/>
        ZeroToOneDouble,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("CharacteristicGroup", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class CharacteristicGroupType : OptIdComplexObjectType
    {

        private string characteristicGroupNameField;

        private CharacteristicType[] characteristicField;

        private bool groupOutOfLimitsField;

        private bool groupOutOfLimitsFieldSpecified;

        /// <remarks/>
        public string CharacteristicGroupName
        {
            get {
                return this.characteristicGroupNameField;
            }
            set {
                this.characteristicGroupNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Characteristic")]
        public CharacteristicType[] Characteristic
        {
            get {
                return this.characteristicField;
            }
            set {
                this.characteristicField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool groupOutOfLimits
        {
            get {
                return this.groupOutOfLimitsField;
            }
            set {
                this.groupOutOfLimitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupOutOfLimitsSpecified
        {
            get {
                return this.groupOutOfLimitsFieldSpecified;
            }
            set {
                this.groupOutOfLimitsFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("DerivedData", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class DerivedDataType : ReqIdComplexObjectType
    {

        private MeasurementClassCodeSimpleType measurementClassCodeField;

        private System.DateTime startDateTimeField;

        private string realTimeDurationField;

        private SpectrumType[] spectrumField;

        private GrossCountsType[] grossCountsField;

        private DoseRateType[] doseRateField;

        private TotalDoseType[] totalDoseField;

        private ExposureRateType[] exposureRateField;

        private TotalExposureType[] totalExposureField;

        private object[] derivedDataExtensionField;

        /// <remarks/>
        public MeasurementClassCodeSimpleType MeasurementClassCode
        {
            get {
                return this.measurementClassCodeField;
            }
            set {
                this.measurementClassCodeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime StartDateTime
        {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string RealTimeDuration
        {
            get {
                return this.realTimeDurationField;
            }
            set {
                this.realTimeDurationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Spectrum")]
        public SpectrumType[] Spectrum
        {
            get {
                return this.spectrumField;
            }
            set {
                this.spectrumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GrossCounts")]
        public GrossCountsType[] GrossCounts
        {
            get {
                return this.grossCountsField;
            }
            set {
                this.grossCountsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DoseRate")]
        public DoseRateType[] DoseRate
        {
            get {
                return this.doseRateField;
            }
            set {
                this.doseRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TotalDose")]
        public TotalDoseType[] TotalDose
        {
            get {
                return this.totalDoseField;
            }
            set {
                this.totalDoseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExposureRate")]
        public ExposureRateType[] ExposureRate
        {
            get {
                return this.exposureRateField;
            }
            set {
                this.exposureRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TotalExposure")]
        public TotalExposureType[] TotalExposure
        {
            get {
                return this.totalExposureField;
            }
            set {
                this.totalExposureField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DerivedDataExtension")]
        public object[] DerivedDataExtension
        {
            get {
                return this.derivedDataExtensionField;
            }
            set {
                this.derivedDataExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("MeasurementClassCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum MeasurementClassCodeSimpleType
    {

        /// <remarks/>
        Foreground,

        /// <remarks/>
        Background,

        /// <remarks/>
        Calibration,

        /// <remarks/>
        IntrinsicActivity,

        /// <remarks/>
        NotSpecified,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Spectrum", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SpectrumType : ReqIdComplexObjectType
    {

        private string liveTimeDurationField;

        private ChannelDataType channelDataField;

        private object[] spectrumExtensionField;

        private string energyCalibrationReferenceField;

        private string intrinsicSingleEscapePeakEfficiencyCalibrationReferenceField;

        private string fWHMCalibrationReferenceField;

        private string intrinsicDoubleEscapePeakEfficiencyCalibrationReferenceField;

        private string intrinsicFullEnergyPeakEfficiencyCalibrationReferenceField;

        private string fullEnergyPeakEfficiencyCalibrationReferenceField;

        private string radDetectorInformationReferenceField;

        private string radRawSpectrumReferencesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string LiveTimeDuration
        {
            get {
                return this.liveTimeDurationField;
            }
            set {
                this.liveTimeDurationField = value;
            }
        }

        /// <remarks/>
        public ChannelDataType ChannelData
        {
            get {
                return this.channelDataField;
            }
            set {
                this.channelDataField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SpectrumExtension")]
        public object[] SpectrumExtension
        {
            get {
                return this.spectrumExtensionField;
            }
            set {
                this.spectrumExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string energyCalibrationReference
        {
            get {
                return this.energyCalibrationReferenceField;
            }
            set {
                this.energyCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string intrinsicSingleEscapePeakEfficiencyCalibrationReference
        {
            get {
                return this.intrinsicSingleEscapePeakEfficiencyCalibrationReferenceField;
            }
            set {
                this.intrinsicSingleEscapePeakEfficiencyCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string FWHMCalibrationReference
        {
            get {
                return this.fWHMCalibrationReferenceField;
            }
            set {
                this.fWHMCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string intrinsicDoubleEscapePeakEfficiencyCalibrationReference
        {
            get {
                return this.intrinsicDoubleEscapePeakEfficiencyCalibrationReferenceField;
            }
            set {
                this.intrinsicDoubleEscapePeakEfficiencyCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string intrinsicFullEnergyPeakEfficiencyCalibrationReference
        {
            get {
                return this.intrinsicFullEnergyPeakEfficiencyCalibrationReferenceField;
            }
            set {
                this.intrinsicFullEnergyPeakEfficiencyCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string fullEnergyPeakEfficiencyCalibrationReference
        {
            get {
                return this.fullEnergyPeakEfficiencyCalibrationReferenceField;
            }
            set {
                this.fullEnergyPeakEfficiencyCalibrationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawSpectrumReferences
        {
            get {
                return this.radRawSpectrumReferencesField;
            }
            set {
                this.radRawSpectrumReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("GrossCounts", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class GrossCountsType : ReqIdComplexObjectType
    {

        private string liveTimeDurationField;

        private string countDataField;

        private string totalCountDataField;

        private string radRawGrossCountsReferencesField;

        private string energyWindowsReferenceField;

        private string radDetectorInformationReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string LiveTimeDuration
        {
            get {
                return this.liveTimeDurationField;
            }
            set {
                this.liveTimeDurationField = value;
            }
        }

        /// <remarks/>
        public string CountData
        {
            get {
                return this.countDataField;
            }
            set {
                this.countDataField = value;
            }
        }

        /// <remarks/>
        public string TotalCountData
        {
            get {
                return this.totalCountDataField;
            }
            set {
                this.totalCountDataField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawGrossCountsReferences
        {
            get {
                return this.radRawGrossCountsReferencesField;
            }
            set {
                this.radRawGrossCountsReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string energyWindowsReference
        {
            get {
                return this.energyWindowsReferenceField;
            }
            set {
                this.energyWindowsReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("DoseRate", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class DoseRateType : ReqIdComplexObjectType
    {

        private DoseRateuSvhType doseRateValueField;

        private string doseRateLevelDescriptionField;

        private string radRawDoseRateReferencesField;

        private string radDetectorInformationReferenceField;

        /// <remarks/>
        public DoseRateuSvhType DoseRateValue
        {
            get {
                return this.doseRateValueField;
            }
            set {
                this.doseRateValueField = value;
            }
        }

        /// <remarks/>
        public string DoseRateLevelDescription
        {
            get {
                return this.doseRateLevelDescriptionField;
            }
            set {
                this.doseRateLevelDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawDoseRateReferences
        {
            get {
                return this.radRawDoseRateReferencesField;
            }
            set {
                this.radRawDoseRateReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("TotalDose", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class TotalDoseType : TotalDoseuSvType
    {

        private string radRawTotalDoseReferencesField;

        private string radDetectorInformationReferenceField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawTotalDoseReferences
        {
            get {
                return this.radRawTotalDoseReferencesField;
            }
            set {
                this.radRawTotalDoseReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("ExposureRate", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class ExposureRateType : ReqIdComplexObjectType
    {

        private ExposureRatemRhType exposureRateValueField;

        private string exposureRateLevelDescriptionField;

        private string radDetectorInformationReferenceField;

        private string radRawExposureRateReferencesField;

        /// <remarks/>
        public ExposureRatemRhType ExposureRateValue
        {
            get {
                return this.exposureRateValueField;
            }
            set {
                this.exposureRateValueField = value;
            }
        }

        /// <remarks/>
        public string ExposureRateLevelDescription
        {
            get {
                return this.exposureRateLevelDescriptionField;
            }
            set {
                this.exposureRateLevelDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawExposureRateReferences
        {
            get {
                return this.radRawExposureRateReferencesField;
            }
            set {
                this.radRawExposureRateReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("TotalExposure", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class TotalExposureType : TotalExposuremRType
    {

        private string radDetectorInformationReferenceField;

        private string radRawTotalExposureReferencesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radRawTotalExposureReferences
        {
            get {
                return this.radRawTotalExposureReferencesField;
            }
            set {
                this.radRawTotalExposureReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("EnergyBoundaryValues", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class EnergiesKeVType
    {

        private string unitsField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Text
        {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("EnergyCalibration", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class EnergyCalibrationType : ReqIdComplexObjectType
    {

        private object itemField;

        private EnergiesKeVType energyValuesField;

        private EnergyDeviationsKeVType energyDeviationValuesField;

        private System.DateTime calibrationDateTimeField;

        private bool calibrationDateTimeFieldSpecified;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CoefficientValues", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("EnergyBoundaryValues", typeof(EnergiesKeVType))]
        public object Item
        {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }

        /// <remarks/>
        public EnergiesKeVType EnergyValues
        {
            get {
                return this.energyValuesField;
            }
            set {
                this.energyValuesField = value;
            }
        }

        /// <remarks/>
        public EnergyDeviationsKeVType EnergyDeviationValues
        {
            get {
                return this.energyDeviationValuesField;
            }
            set {
                this.energyDeviationValuesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CalibrationDateTime
        {
            get {
                return this.calibrationDateTimeField;
            }
            set {
                this.calibrationDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalibrationDateTimeSpecified
        {
            get {
                return this.calibrationDateTimeFieldSpecified;
            }
            set {
                this.calibrationDateTimeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("EnergyDeviationValues", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class EnergyDeviationsKeVType
    {

        private string unitsField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Text
        {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("EnergyWindows", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class EnergyWindowsType : ReqIdComplexObjectType
    {

        private EnergiesKeVType windowStartEnergyValuesField;

        private EnergiesKeVType windowEndEnergyValuesField;

        /// <remarks/>
        public EnergiesKeVType WindowStartEnergyValues
        {
            get {
                return this.windowStartEnergyValuesField;
            }
            set {
                this.windowStartEnergyValuesField = value;
            }
        }

        /// <remarks/>
        public EnergiesKeVType WindowEndEnergyValues
        {
            get {
                return this.windowEndEnergyValuesField;
            }
            set {
                this.windowEndEnergyValuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("FullEnergyPeakEfficiencyCalibration", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class EfficiencyCalibrationType : ReqIdComplexObjectType
    {

        private EnergiesKeVType energyValuesField;

        private string efficiencyValuesField;

        private string efficiencyUncertaintyValuesField;

        private System.DateTime calibrationDateTimeField;

        private bool calibrationDateTimeFieldSpecified;

        /// <remarks/>
        public EnergiesKeVType EnergyValues
        {
            get {
                return this.energyValuesField;
            }
            set {
                this.energyValuesField = value;
            }
        }

        /// <remarks/>
        public string EfficiencyValues
        {
            get {
                return this.efficiencyValuesField;
            }
            set {
                this.efficiencyValuesField = value;
            }
        }

        /// <remarks/>
        public string EfficiencyUncertaintyValues
        {
            get {
                return this.efficiencyUncertaintyValuesField;
            }
            set {
                this.efficiencyUncertaintyValuesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CalibrationDateTime
        {
            get {
                return this.calibrationDateTimeField;
            }
            set {
                this.calibrationDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalibrationDateTimeSpecified
        {
            get {
                return this.calibrationDateTimeFieldSpecified;
            }
            set {
                this.calibrationDateTimeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("FWHMCalibration", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class FWHMCalibrationType : ReqIdComplexObjectType
    {

        private EnergiesKeVType energyValuesField;

        private FWHMKeVType fWHMValuesField;

        private FWHMUncertaintiesKeVType fWHMUncertaintyValuesField;

        private System.DateTime calibrationDateTimeField;

        private bool calibrationDateTimeFieldSpecified;

        /// <remarks/>
        public EnergiesKeVType EnergyValues
        {
            get {
                return this.energyValuesField;
            }
            set {
                this.energyValuesField = value;
            }
        }

        /// <remarks/>
        public FWHMKeVType FWHMValues
        {
            get {
                return this.fWHMValuesField;
            }
            set {
                this.fWHMValuesField = value;
            }
        }

        /// <remarks/>
        public FWHMUncertaintiesKeVType FWHMUncertaintyValues
        {
            get {
                return this.fWHMUncertaintyValuesField;
            }
            set {
                this.fWHMUncertaintyValuesField = value;
            }
        }

        /// <remarks/>
        public System.DateTime CalibrationDateTime
        {
            get {
                return this.calibrationDateTimeField;
            }
            set {
                this.calibrationDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalibrationDateTimeSpecified
        {
            get {
                return this.calibrationDateTimeFieldSpecified;
            }
            set {
                this.calibrationDateTimeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("FWHMValues", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class FWHMKeVType
    {

        private string unitsField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Text
        {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("FWHMUncertaintyValues", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class FWHMUncertaintiesKeVType
    {

        private string unitsField;

        private string textField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Text
        {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("ImageHeightValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class PixelType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType = "positiveInteger")]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("ImagePerspectiveCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum ImagePerspectiveCodeSimpleType
    {

        /// <remarks/>
        Front,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Left Side")]
        LeftSide,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Right Side")]
        RightSide,

        /// <remarks/>
        Rear,

        /// <remarks/>
        Top,

        /// <remarks/>
        Bottom,

        /// <remarks/>
        Interior,

        /// <remarks/>
        NA,

        /// <remarks/>
        Unknown,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("MultimediaData", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class MultimediaDataType : OptIdComplexObjectType
    {

        private string multimediaDataDescriptionField;

        private object[] itemsField;

        private ItemsChoiceType1[] itemsElementNameField;

        private System.DateTime multimediaCaptureStartDateTimeField;

        private bool multimediaCaptureStartDateTimeFieldSpecified;

        private string multimediaCaptureDurationField;

        private string multimediaFileURIField;

        private string multimediaFileSizeValueField;

        private string multimediaDataMIMEKindField;

        private string encodingMIMEKindField;

        private MultimediaDeviceCategoryCodeSimpleType multimediaDeviceCategoryCodeField;

        private bool multimediaDeviceCategoryCodeFieldSpecified;

        private string multimediaDeviceIdentifierField;

        private ImagePerspectiveCodeSimpleType imagePerspectiveCodeField;

        private bool imagePerspectiveCodeFieldSpecified;

        private PixelType imageWidthValueField;

        private PixelType imageHeightValueField;

        private object[] multimediaDataExtensionField;

        private string radItemInformationReferencesField;

        private string sequenceNumberField;

        /// <remarks/>
        public string MultimediaDataDescription
        {
            get {
                return this.multimediaDataDescriptionField;
            }
            set {
                this.multimediaDataDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("BinaryBase64Object", typeof(byte[]), DataType = "base64Binary")]
        [System.Xml.Serialization.XmlElementAttribute("BinaryHexObject", typeof(byte[]), DataType = "hexBinary")]
        [System.Xml.Serialization.XmlElementAttribute("BinaryUTF8Object", typeof(string))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType1[] ItemsElementName
        {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }

        /// <remarks/>
        public System.DateTime MultimediaCaptureStartDateTime
        {
            get {
                return this.multimediaCaptureStartDateTimeField;
            }
            set {
                this.multimediaCaptureStartDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultimediaCaptureStartDateTimeSpecified
        {
            get {
                return this.multimediaCaptureStartDateTimeFieldSpecified;
            }
            set {
                this.multimediaCaptureStartDateTimeFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string MultimediaCaptureDuration
        {
            get {
                return this.multimediaCaptureDurationField;
            }
            set {
                this.multimediaCaptureDurationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "anyURI")]
        public string MultimediaFileURI
        {
            get {
                return this.multimediaFileURIField;
            }
            set {
                this.multimediaFileURIField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "positiveInteger")]
        public string MultimediaFileSizeValue
        {
            get {
                return this.multimediaFileSizeValueField;
            }
            set {
                this.multimediaFileSizeValueField = value;
            }
        }

        /// <remarks/>
        public string MultimediaDataMIMEKind
        {
            get {
                return this.multimediaDataMIMEKindField;
            }
            set {
                this.multimediaDataMIMEKindField = value;
            }
        }

        /// <remarks/>
        public string EncodingMIMEKind
        {
            get {
                return this.encodingMIMEKindField;
            }
            set {
                this.encodingMIMEKindField = value;
            }
        }

        /// <remarks/>
        public MultimediaDeviceCategoryCodeSimpleType MultimediaDeviceCategoryCode
        {
            get {
                return this.multimediaDeviceCategoryCodeField;
            }
            set {
                this.multimediaDeviceCategoryCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultimediaDeviceCategoryCodeSpecified
        {
            get {
                return this.multimediaDeviceCategoryCodeFieldSpecified;
            }
            set {
                this.multimediaDeviceCategoryCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string MultimediaDeviceIdentifier
        {
            get {
                return this.multimediaDeviceIdentifierField;
            }
            set {
                this.multimediaDeviceIdentifierField = value;
            }
        }

        /// <remarks/>
        public ImagePerspectiveCodeSimpleType ImagePerspectiveCode
        {
            get {
                return this.imagePerspectiveCodeField;
            }
            set {
                this.imagePerspectiveCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImagePerspectiveCodeSpecified
        {
            get {
                return this.imagePerspectiveCodeFieldSpecified;
            }
            set {
                this.imagePerspectiveCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public PixelType ImageWidthValue
        {
            get {
                return this.imageWidthValueField;
            }
            set {
                this.imageWidthValueField = value;
            }
        }

        /// <remarks/>
        public PixelType ImageHeightValue
        {
            get {
                return this.imageHeightValueField;
            }
            set {
                this.imageHeightValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MultimediaDataExtension")]
        public object[] MultimediaDataExtension
        {
            get {
                return this.multimediaDataExtensionField;
            }
            set {
                this.multimediaDataExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radItemInformationReferences
        {
            get {
                return this.radItemInformationReferencesField;
            }
            set {
                this.radItemInformationReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "positiveInteger")]
        public string sequenceNumber
        {
            get {
                return this.sequenceNumberField;
            }
            set {
                this.sequenceNumberField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42", IncludeInSchema = false)]
    public enum ItemsChoiceType1
    {

        /// <remarks/>
        BinaryBase64Object,

        /// <remarks/>
        BinaryHexObject,

        /// <remarks/>
        BinaryUTF8Object,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("MultimediaDeviceCategoryCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum MultimediaDeviceCategoryCodeSimpleType
    {

        /// <remarks/>
        Audio,

        /// <remarks/>
        Camera,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Camera-D")]
        CameraD,

        /// <remarks/>
        LPR,

        /// <remarks/>
        NII,

        /// <remarks/>
        OCR,

        /// <remarks/>
        Other,

        /// <remarks/>
        Reader,

        /// <remarks/>
        RFID,

        /// <remarks/>
        Scanner,

        /// <remarks/>
        Video,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Video-D")]
        VideoD,

        /// <remarks/>
        VIS,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("Orientation", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class OrientationType
    {

        private Angle180Type azimuthValueField;

        private Angle90Type inclinationValueField;

        private Angle180Type rollValueField;

        /// <remarks/>
        public Angle180Type AzimuthValue
        {
            get {
                return this.azimuthValueField;
            }
            set {
                this.azimuthValueField = value;
            }
        }

        /// <remarks/>
        public Angle90Type InclinationValue
        {
            get {
                return this.inclinationValueField;
            }
            set {
                this.inclinationValueField = value;
            }
        }

        /// <remarks/>
        public Angle180Type RollValue
        {
            get {
                return this.rollValueField;
            }
            set {
                this.rollValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorCharacteristics", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class CharacteristicsType : OptIdComplexObjectType
    {

        private OptIdComplexObjectType[] itemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Characteristic", typeof(CharacteristicType))]
        [System.Xml.Serialization.XmlElementAttribute("CharacteristicGroup", typeof(CharacteristicGroupType))]
        public OptIdComplexObjectType[] Items
        {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorCategoryCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum RadDetectorCategoryCodeSimpleType
    {

        /// <remarks/>
        Gamma,

        /// <remarks/>
        Neutron,

        /// <remarks/>
        Alpha,

        /// <remarks/>
        Beta,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("X-ray")]
        Xray,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorDepthValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class PositiveLengthCMType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorInformation", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadDetectorInformationType : ReqIdComplexObjectType
    {

        private string radDetectorNameField;

        private RadDetectorCategoryCodeSimpleType radDetectorCategoryCodeField;

        private RadDetectorKindCodeSimpleType radDetectorKindCodeField;

        private string radDetectorDescriptionField;

        private PositiveLengthCMType radDetectorLengthValueField;

        private PositiveLengthCMType radDetectorWidthValueField;

        private PositiveLengthCMType radDetectorDepthValueField;

        private PositiveLengthCMType radDetectorDiameterValueField;

        private PositiveVolumeCCType radDetectorVolumeValueField;

        private CharacteristicsType[] radDetectorCharacteristicsField;

        private object[] radDetectorInformationExtensionField;

        /// <remarks/>
        public string RadDetectorName
        {
            get {
                return this.radDetectorNameField;
            }
            set {
                this.radDetectorNameField = value;
            }
        }

        /// <remarks/>
        public RadDetectorCategoryCodeSimpleType RadDetectorCategoryCode
        {
            get {
                return this.radDetectorCategoryCodeField;
            }
            set {
                this.radDetectorCategoryCodeField = value;
            }
        }

        /// <remarks/>
        public RadDetectorKindCodeSimpleType RadDetectorKindCode
        {
            get {
                return this.radDetectorKindCodeField;
            }
            set {
                this.radDetectorKindCodeField = value;
            }
        }

        /// <remarks/>
        public string RadDetectorDescription
        {
            get {
                return this.radDetectorDescriptionField;
            }
            set {
                this.radDetectorDescriptionField = value;
            }
        }

        /// <remarks/>
        public PositiveLengthCMType RadDetectorLengthValue
        {
            get {
                return this.radDetectorLengthValueField;
            }
            set {
                this.radDetectorLengthValueField = value;
            }
        }

        /// <remarks/>
        public PositiveLengthCMType RadDetectorWidthValue
        {
            get {
                return this.radDetectorWidthValueField;
            }
            set {
                this.radDetectorWidthValueField = value;
            }
        }

        /// <remarks/>
        public PositiveLengthCMType RadDetectorDepthValue
        {
            get {
                return this.radDetectorDepthValueField;
            }
            set {
                this.radDetectorDepthValueField = value;
            }
        }

        /// <remarks/>
        public PositiveLengthCMType RadDetectorDiameterValue
        {
            get {
                return this.radDetectorDiameterValueField;
            }
            set {
                this.radDetectorDiameterValueField = value;
            }
        }

        /// <remarks/>
        public PositiveVolumeCCType RadDetectorVolumeValue
        {
            get {
                return this.radDetectorVolumeValueField;
            }
            set {
                this.radDetectorVolumeValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorCharacteristics")]
        public CharacteristicsType[] RadDetectorCharacteristics
        {
            get {
                return this.radDetectorCharacteristicsField;
            }
            set {
                this.radDetectorCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorInformationExtension")]
        public object[] RadDetectorInformationExtension
        {
            get {
                return this.radDetectorInformationExtensionField;
            }
            set {
                this.radDetectorInformationExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorKindCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum RadDetectorKindCodeSimpleType
    {

        /// <remarks/>
        HPGe,

        /// <remarks/>
        HPXe,

        /// <remarks/>
        NaI,

        /// <remarks/>
        LaBr3,

        /// <remarks/>
        LaCl3,

        /// <remarks/>
        BGO,

        /// <remarks/>
        CZT,

        /// <remarks/>
        CdTe,

        /// <remarks/>
        CsI,

        /// <remarks/>
        GMT,

        /// <remarks/>
        GMTW,

        /// <remarks/>
        LiFiber,

        /// <remarks/>
        PVT,

        /// <remarks/>
        PS,

        /// <remarks/>
        He3,

        /// <remarks/>
        He4,

        /// <remarks/>
        LiGlass,

        /// <remarks/>
        LiI,

        /// <remarks/>
        SrI2,

        /// <remarks/>
        CLYC,

        /// <remarks/>
        CdWO4,

        /// <remarks/>
        BF3,

        /// <remarks/>
        HgI2,

        /// <remarks/>
        CeBr4,

        /// <remarks/>
        LiCAF,

        /// <remarks/>
        LiZnS,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorVolumeValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class PositiveVolumeCCType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadDetectorState", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadDetectorStateType : OptIdComplexObjectType
    {

        private StateVectorType stateVectorField;

        private FaultType[] faultField;

        private CharacteristicsType[] radDetectorCharacteristicsField;

        private object[] radDetectorStateExtensionField;

        private string radDetectorInformationReferenceField;

        /// <remarks/>
        public StateVectorType StateVector
        {
            get {
                return this.stateVectorField;
            }
            set {
                this.stateVectorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fault")]
        public FaultType[] Fault
        {
            get {
                return this.faultField;
            }
            set {
                this.faultField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorCharacteristics")]
        public CharacteristicsType[] RadDetectorCharacteristics
        {
            get {
                return this.radDetectorCharacteristicsField;
            }
            set {
                this.radDetectorCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorStateExtension")]
        public object[] RadDetectorStateExtension
        {
            get {
                return this.radDetectorStateExtensionField;
            }
            set {
                this.radDetectorStateExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radDetectorInformationReference
        {
            get {
                return this.radDetectorInformationReferenceField;
            }
            set {
                this.radDetectorInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("StateVector", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class StateVectorType
    {

        private object itemField;

        private OrientationType orientationField;

        private SpeedType speedValueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GeographicPoint", typeof(GeographicPointType))]
        [System.Xml.Serialization.XmlElementAttribute("LocationDescription", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("RelativeLocation", typeof(RelativeLocationType))]
        public object Item
        {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }

        /// <remarks/>
        public OrientationType Orientation
        {
            get {
                return this.orientationField;
            }
            set {
                this.orientationField = value;
            }
        }

        /// <remarks/>
        public SpeedType SpeedValue
        {
            get {
                return this.speedValueField;
            }
            set {
                this.speedValueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("SpeedValue", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class SpeedType
    {

        private string unitsField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "token")]
        public string units
        {
            get {
                return this.unitsField;
            }
            set {
                this.unitsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentClassCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum RadInstrumentClassCodeSimpleType
    {

        /// <remarks/>
        Backpack,

        /// <remarks/>
        Dosimeter,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Electronic Personal Emergency Radiation Detector")]
        ElectronicPersonalEmergencyRadiationDetector,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mobile System")]
        MobileSystem,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Network Area Monitor")]
        NetworkAreaMonitor,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Neutron Handheld")]
        NeutronHandheld,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Personal Radiation Detector")]
        PersonalRadiationDetector,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Radionuclide Identifier")]
        RadionuclideIdentifier,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Portal Monitor")]
        PortalMonitor,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Spectroscopic Portal Monitor")]
        SpectroscopicPortalMonitor,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Spectroscopic Personal Radiation Detector")]
        SpectroscopicPersonalRadiationDetector,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gamma Handheld")]
        GammaHandheld,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Transportable System")]
        TransportableSystem,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentData", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadInstrumentDataType : OptIdComplexObjectType
    {

        private string radInstrumentDataCreatorNameField;

        private RadInstrumentInformationType radInstrumentInformationField;

        private RadDetectorInformationType[] radDetectorInformationField;

        private RadItemInformationType[] radItemInformationField;

        private object[] itemsField;

        private ItemsChoiceType2[] itemsElementNameField;

        private object[] radInstrumentDataExtensionField;

        private string n42DocUUIDField;

        private System.DateTime n42DocDateTimeField;

        private bool n42DocDateTimeFieldSpecified;

        /// <remarks/>
        public string RadInstrumentDataCreatorName
        {
            get {
                return this.radInstrumentDataCreatorNameField;
            }
            set {
                this.radInstrumentDataCreatorNameField = value;
            }
        }

        /// <remarks/>
        public RadInstrumentInformationType RadInstrumentInformation
        {
            get {
                return this.radInstrumentInformationField;
            }
            set {
                this.radInstrumentInformationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorInformation")]
        public RadDetectorInformationType[] RadDetectorInformation
        {
            get {
                return this.radDetectorInformationField;
            }
            set {
                this.radDetectorInformationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemInformation")]
        public RadItemInformationType[] RadItemInformation
        {
            get {
                return this.radItemInformationField;
            }
            set {
                this.radItemInformationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AnalysisResults", typeof(AnalysisResultsType))]
        [System.Xml.Serialization.XmlElementAttribute("DerivedData", typeof(DerivedDataType))]
        [System.Xml.Serialization.XmlElementAttribute("EnergyCalibration", typeof(EnergyCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("EnergyWindows", typeof(EnergyWindowsType))]
        [System.Xml.Serialization.XmlElementAttribute("FWHMCalibration", typeof(FWHMCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("FullEnergyPeakEfficiencyCalibration", typeof(EfficiencyCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("IntrinsicDoubleEscapePeakEfficiencyCalibration", typeof(EfficiencyCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("IntrinsicFullEnergyPeakEfficiencyCalibration", typeof(EfficiencyCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("IntrinsicSingleEscapePeakEfficiencyCalibration", typeof(EfficiencyCalibrationType))]
        [System.Xml.Serialization.XmlElementAttribute("MultimediaData", typeof(MultimediaDataType))]
        [System.Xml.Serialization.XmlElementAttribute("RadMeasurement", typeof(RadMeasurementType))]
        [System.Xml.Serialization.XmlElementAttribute("RadMeasurementGroup", typeof(RadMeasurementGroupType))]
        [System.Xml.Serialization.XmlElementAttribute("TotalEfficiencyCalibration", typeof(EfficiencyCalibrationType))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items
        {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType2[] ItemsElementName
        {
            get {
                return this.itemsElementNameField;
            }
            set {
                this.itemsElementNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentDataExtension")]
        public object[] RadInstrumentDataExtension
        {
            get {
                return this.radInstrumentDataExtensionField;
            }
            set {
                this.radInstrumentDataExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string n42DocUUID
        {
            get {
                return this.n42DocUUIDField;
            }
            set {
                this.n42DocUUIDField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime n42DocDateTime
        {
            get {
                return this.n42DocDateTimeField;
            }
            set {
                this.n42DocDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool n42DocDateTimeSpecified
        {
            get {
                return this.n42DocDateTimeFieldSpecified;
            }
            set {
                this.n42DocDateTimeFieldSpecified = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentInformation", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadInstrumentInformationType : ReqIdComplexObjectType
    {

        private string radInstrumentManufacturerNameField;

        private string radInstrumentIdentifierField;

        private string radInstrumentModelNameField;

        private string radInstrumentDescriptionField;

        private RadInstrumentClassCodeSimpleType radInstrumentClassCodeField;

        private RadInstrumentVersionType[] radInstrumentVersionField;

        private RadInstrumentQualityControlType radInstrumentQualityControlField;

        private CharacteristicsType[] radInstrumentCharacteristicsField;

        private object[] radInstrumentInformationExtensionField;

        /// <remarks/>
        public string RadInstrumentManufacturerName
        {
            get {
                return this.radInstrumentManufacturerNameField;
            }
            set {
                this.radInstrumentManufacturerNameField = value;
            }
        }

        /// <remarks/>
        public string RadInstrumentIdentifier
        {
            get {
                return this.radInstrumentIdentifierField;
            }
            set {
                this.radInstrumentIdentifierField = value;
            }
        }

        /// <remarks/>
        public string RadInstrumentModelName
        {
            get {
                return this.radInstrumentModelNameField;
            }
            set {
                this.radInstrumentModelNameField = value;
            }
        }

        /// <remarks/>
        public string RadInstrumentDescription
        {
            get {
                return this.radInstrumentDescriptionField;
            }
            set {
                this.radInstrumentDescriptionField = value;
            }
        }

        /// <remarks/>
        public RadInstrumentClassCodeSimpleType RadInstrumentClassCode
        {
            get {
                return this.radInstrumentClassCodeField;
            }
            set {
                this.radInstrumentClassCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentVersion")]
        public RadInstrumentVersionType[] RadInstrumentVersion
        {
            get {
                return this.radInstrumentVersionField;
            }
            set {
                this.radInstrumentVersionField = value;
            }
        }

        /// <remarks/>
        public RadInstrumentQualityControlType RadInstrumentQualityControl
        {
            get {
                return this.radInstrumentQualityControlField;
            }
            set {
                this.radInstrumentQualityControlField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentCharacteristics")]
        public CharacteristicsType[] RadInstrumentCharacteristics
        {
            get {
                return this.radInstrumentCharacteristicsField;
            }
            set {
                this.radInstrumentCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentInformationExtension")]
        public object[] RadInstrumentInformationExtension
        {
            get {
                return this.radInstrumentInformationExtensionField;
            }
            set {
                this.radInstrumentInformationExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentVersion", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadInstrumentVersionType : OptIdComplexObjectType
    {

        private string radInstrumentComponentNameField;

        private string radInstrumentComponentVersionField;

        /// <remarks/>
        public string RadInstrumentComponentName
        {
            get {
                return this.radInstrumentComponentNameField;
            }
            set {
                this.radInstrumentComponentNameField = value;
            }
        }

        /// <remarks/>
        public string RadInstrumentComponentVersion
        {
            get {
                return this.radInstrumentComponentVersionField;
            }
            set {
                this.radInstrumentComponentVersionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentQualityControl", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadInstrumentQualityControlType : OptIdComplexObjectType
    {

        private System.DateTime inspectionDateTimeField;

        private bool inCalibrationIndicatorField;

        /// <remarks/>
        public System.DateTime InspectionDateTime
        {
            get {
                return this.inspectionDateTimeField;
            }
            set {
                this.inspectionDateTimeField = value;
            }
        }

        /// <remarks/>
        public bool InCalibrationIndicator
        {
            get {
                return this.inCalibrationIndicatorField;
            }
            set {
                this.inCalibrationIndicatorField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadItemInformation", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadItemInformationType : ReqIdComplexObjectType
    {

        private string radItemDescriptionField;

        private RadItemQuantityType radItemQuantityField;

        private string radItemMeasurementGeometryDescriptionField;

        private CharacteristicsType[] radItemCharacteristicsField;

        private object[] radItemInformationExtensionField;

        /// <remarks/>
        public string RadItemDescription
        {
            get {
                return this.radItemDescriptionField;
            }
            set {
                this.radItemDescriptionField = value;
            }
        }

        /// <remarks/>
        public RadItemQuantityType RadItemQuantity
        {
            get {
                return this.radItemQuantityField;
            }
            set {
                this.radItemQuantityField = value;
            }
        }

        /// <remarks/>
        public string RadItemMeasurementGeometryDescription
        {
            get {
                return this.radItemMeasurementGeometryDescriptionField;
            }
            set {
                this.radItemMeasurementGeometryDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemCharacteristics")]
        public CharacteristicsType[] RadItemCharacteristics
        {
            get {
                return this.radItemCharacteristicsField;
            }
            set {
                this.radItemCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemInformationExtension")]
        public object[] RadItemInformationExtension
        {
            get {
                return this.radItemInformationExtensionField;
            }
            set {
                this.radItemInformationExtensionField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadItemQuantity", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadItemQuantityType : OptIdComplexObjectType
    {

        private string radItemQuantityValueField;

        private string radItemQuantityUncertaintyValueField;

        private bool radItemQuantityUncertaintyValueFieldSpecified;

        private string radItemQuantityUnitsField;

        /// <remarks/>
        public string RadItemQuantityValue
        {
            get {
                return this.radItemQuantityValueField;
            }
            set {
                this.radItemQuantityValueField = value;
            }
        }

        /// <remarks/>
        public string RadItemQuantityUncertaintyValue
        {
            get {
                return this.radItemQuantityUncertaintyValueField;
            }
            set {
                this.radItemQuantityUncertaintyValueField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadItemQuantityUncertaintyValueSpecified
        {
            get {
                return this.radItemQuantityUncertaintyValueFieldSpecified;
            }
            set {
                this.radItemQuantityUncertaintyValueFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string RadItemQuantityUnits
        {
            get {
                return this.radItemQuantityUnitsField;
            }
            set {
                this.radItemQuantityUnitsField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadMeasurement", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadMeasurementType : ReqIdComplexObjectType
    {

        private MeasurementClassCodeSimpleType measurementClassCodeField;

        private System.DateTime startDateTimeField;

        private string realTimeDurationField;

        private SpectrumType[] spectrumField;

        private GrossCountsType[] grossCountsField;

        private DoseRateType[] doseRateField;

        private TotalDoseType[] totalDoseField;

        private ExposureRateType[] exposureRateField;

        private TotalExposureType[] totalExposureField;

        private RadInstrumentStateType radInstrumentStateField;

        private RadDetectorStateType[] radDetectorStateField;

        private RadItemStateType[] radItemStateField;

        private bool occupancyIndicatorField;

        private bool occupancyIndicatorFieldSpecified;

        private object[] radMeasurementExtensionField;

        private string radMeasurementGroupReferencesField;

        private string radItemInformationReferencesField;

        /// <remarks/>
        public MeasurementClassCodeSimpleType MeasurementClassCode
        {
            get {
                return this.measurementClassCodeField;
            }
            set {
                this.measurementClassCodeField = value;
            }
        }

        /// <remarks/>
        public System.DateTime StartDateTime
        {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "duration")]
        public string RealTimeDuration
        {
            get {
                return this.realTimeDurationField;
            }
            set {
                this.realTimeDurationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Spectrum")]
        public SpectrumType[] Spectrum
        {
            get {
                return this.spectrumField;
            }
            set {
                this.spectrumField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GrossCounts")]
        public GrossCountsType[] GrossCounts
        {
            get {
                return this.grossCountsField;
            }
            set {
                this.grossCountsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DoseRate")]
        public DoseRateType[] DoseRate
        {
            get {
                return this.doseRateField;
            }
            set {
                this.doseRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TotalDose")]
        public TotalDoseType[] TotalDose
        {
            get {
                return this.totalDoseField;
            }
            set {
                this.totalDoseField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExposureRate")]
        public ExposureRateType[] ExposureRate
        {
            get {
                return this.exposureRateField;
            }
            set {
                this.exposureRateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TotalExposure")]
        public TotalExposureType[] TotalExposure
        {
            get {
                return this.totalExposureField;
            }
            set {
                this.totalExposureField = value;
            }
        }

        /// <remarks/>
        public RadInstrumentStateType RadInstrumentState
        {
            get {
                return this.radInstrumentStateField;
            }
            set {
                this.radInstrumentStateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadDetectorState")]
        public RadDetectorStateType[] RadDetectorState
        {
            get {
                return this.radDetectorStateField;
            }
            set {
                this.radDetectorStateField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemState")]
        public RadItemStateType[] RadItemState
        {
            get {
                return this.radItemStateField;
            }
            set {
                this.radItemStateField = value;
            }
        }

        /// <remarks/>
        public bool OccupancyIndicator
        {
            get {
                return this.occupancyIndicatorField;
            }
            set {
                this.occupancyIndicatorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupancyIndicatorSpecified
        {
            get {
                return this.occupancyIndicatorFieldSpecified;
            }
            set {
                this.occupancyIndicatorFieldSpecified = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadMeasurementExtension")]
        public object[] RadMeasurementExtension
        {
            get {
                return this.radMeasurementExtensionField;
            }
            set {
                this.radMeasurementExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radMeasurementGroupReferences
        {
            get {
                return this.radMeasurementGroupReferencesField;
            }
            set {
                this.radMeasurementGroupReferencesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREFS")]
        public string radItemInformationReferences
        {
            get {
                return this.radItemInformationReferencesField;
            }
            set {
                this.radItemInformationReferencesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentState", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadInstrumentStateType : OptIdComplexObjectType
    {

        private RadInstrumentModeCodeSimpleType radInstrumentModeCodeField;

        private bool radInstrumentModeCodeFieldSpecified;

        private string radInstrumentModeDescriptionField;

        private StateVectorType stateVectorField;

        private FaultType[] faultField;

        private CharacteristicsType[] radInstrumentCharacteristicsField;

        private object[] radInstrumentStateExtensionField;

        private string radInstrumentInformationReferenceField;

        /// <remarks/>
        public RadInstrumentModeCodeSimpleType RadInstrumentModeCode
        {
            get {
                return this.radInstrumentModeCodeField;
            }
            set {
                this.radInstrumentModeCodeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RadInstrumentModeCodeSpecified
        {
            get {
                return this.radInstrumentModeCodeFieldSpecified;
            }
            set {
                this.radInstrumentModeCodeFieldSpecified = value;
            }
        }

        /// <remarks/>
        public string RadInstrumentModeDescription
        {
            get {
                return this.radInstrumentModeDescriptionField;
            }
            set {
                this.radInstrumentModeDescriptionField = value;
            }
        }

        /// <remarks/>
        public StateVectorType StateVector
        {
            get {
                return this.stateVectorField;
            }
            set {
                this.stateVectorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fault")]
        public FaultType[] Fault
        {
            get {
                return this.faultField;
            }
            set {
                this.faultField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentCharacteristics")]
        public CharacteristicsType[] RadInstrumentCharacteristics
        {
            get {
                return this.radInstrumentCharacteristicsField;
            }
            set {
                this.radInstrumentCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadInstrumentStateExtension")]
        public object[] RadInstrumentStateExtension
        {
            get {
                return this.radInstrumentStateExtensionField;
            }
            set {
                this.radInstrumentStateExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radInstrumentInformationReference
        {
            get {
                return this.radInstrumentInformationReferenceField;
            }
            set {
                this.radInstrumentInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadInstrumentModeCode", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public enum RadInstrumentModeCodeSimpleType
    {

        /// <remarks/>
        Calibrate,

        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Long Dwell")]
        LongDwell,

        /// <remarks/>
        Search,

        /// <remarks/>
        Test,

        /// <remarks/>
        Other,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadItemState", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadItemStateType : OptIdComplexObjectType
    {

        private StateVectorType stateVectorField;

        private CharacteristicsType[] radItemCharacteristicsField;

        private object[] radItemStateExtensionField;

        private string radItemInformationReferenceField;

        /// <remarks/>
        public StateVectorType StateVector
        {
            get {
                return this.stateVectorField;
            }
            set {
                this.stateVectorField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemCharacteristics")]
        public CharacteristicsType[] RadItemCharacteristics
        {
            get {
                return this.radItemCharacteristicsField;
            }
            set {
                this.radItemCharacteristicsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RadItemStateExtension")]
        public object[] RadItemStateExtension
        {
            get {
                return this.radItemStateExtensionField;
            }
            set {
                this.radItemStateExtensionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType = "IDREF")]
        public string radItemInformationReference
        {
            get {
                return this.radItemInformationReferenceField;
            }
            set {
                this.radItemInformationReferenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42")]
    [System.Xml.Serialization.XmlRootAttribute("RadMeasurementGroup", Namespace = "http://physics.nist.gov/N42/2011/N42", IsNullable = false)]
    public partial class RadMeasurementGroupType : ReqIdComplexObjectType
    {

        private string radMeasurementGroupDescriptionField;

        private string radMeasurementGroupUUIDField;

        /// <remarks/>
        public string RadMeasurementGroupDescription
        {
            get {
                return this.radMeasurementGroupDescriptionField;
            }
            set {
                this.radMeasurementGroupDescriptionField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string radMeasurementGroupUUID
        {
            get {
                return this.radMeasurementGroupUUIDField;
            }
            set {
                this.radMeasurementGroupUUIDField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://physics.nist.gov/N42/2011/N42", IncludeInSchema = false)]
    public enum ItemsChoiceType2
    {

        /// <remarks/>
        AnalysisResults,

        /// <remarks/>
        DerivedData,

        /// <remarks/>
        EnergyCalibration,

        /// <remarks/>
        EnergyWindows,

        /// <remarks/>
        FWHMCalibration,

        /// <remarks/>
        FullEnergyPeakEfficiencyCalibration,

        /// <remarks/>
        IntrinsicDoubleEscapePeakEfficiencyCalibration,

        /// <remarks/>
        IntrinsicFullEnergyPeakEfficiencyCalibration,

        /// <remarks/>
        IntrinsicSingleEscapePeakEfficiencyCalibration,

        /// <remarks/>
        MultimediaData,

        /// <remarks/>
        RadMeasurement,

        /// <remarks/>
        RadMeasurementGroup,

        /// <remarks/>
        TotalEfficiencyCalibration,
    }

}
